struct some_struct {
    int foo, bar[3];
};

struct some_struct test() { } 

int main() {
    int a, b[2][2];
    struct {
        int f1, f2;
    } c;
    struct some_struct instance_of_some_struct;

    c.f1 = a;
    a = c.f1;       // ok
    b[a][a] = a;    // ok
    (c.f2) = b[1][1];   // ok
    
    /* value returned by function is rvalue */
    main() = 1;     // ERROR: assign to rvalue
    test() = instance_of_some_struct;   // ERROR: assign to rvalue
    
    /* member of rvalue is again an rvalue */
    /* if your implementation supports returning a struct */
    test().foo = 1; // ERROR: assign to rvalue
    
    /* this is not well-defined */
    /* I think array subscript of an rvalue is again an rvalue */
    /* (-.-) */
    test().bar[2] = 3; // (maybe) ERROR: assign to rvalue

    !!a = 1;        // ERROR: assign to rvalue
    a + 0 = 1;      // ERROR: assign to rvalue
    b[0][0] = b[0][1] = b[1][0]; // ok
    (a = b[0][0]) = b[0][1];    // ok
}
